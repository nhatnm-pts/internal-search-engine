version: "3"
services:

  postgres:
    image: postgres:12.0-alpine
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=$PSQL_USER
      - POSTGRES_PASSWORD=$PSQL_PASSWD
      - POSTGRES_DB=$PSQL_TABLE_NAME
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - 5435:5432
    networks: ["stack"]

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:$ELASTIC_VERSION
    container_name: elasticsearch
    environment:
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
      - ELASTIC_PASSWORD=$ELASTIC_PASSWORD
      - xpack.security.enabled=$ELASTIC_SECURITY
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - 9200:9200
      - 9300:9300
    networks: ["stack"]

  internal_search_engine_back_end:
    image: internal_search_engine_back_end
    container_name: back_end
    restart: always
    env_file:
      - .env
    volumes:
      - "./filestore/:/app/filestore/"
      - "./backend:/app"
    ports: ["8000:80"]
    networks: ["stack"]
    links: ["elasticsearch", "postgres"]
    depends_on: ["elasticsearch", "postgres"]
    command: ["/start-reload.sh"]

  internal_search_engine_front_end:
    image: internal_search_engine_front_end
    container_name: front_end
    restart: always
    environment:
      - VUE_APP_BASE_URL=http://localhost:8000
    env_file:
      - .env
    volumes:
      - "./frontend:/app"
    ports: ["8080:8080"]
    networks: ["stack"]
    links: ["elasticsearch"]
    depends_on: ["internal_search_engine_back_end"]

networks:
  stack: {}

volumes:
  postgres_data:
